# Define the minimum platform for the project
platform :ios, '14.0'

# Disable CocoaPods analytics for faster build times
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Set project configurations for different build types
project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Flutter helper function
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

# Setup Flutter iOS pods
flutter_ios_podfile_setup

target 'Runner' do
  # Use modular headers for Firebase dependencies
  use_frameworks!
  pod 'Firebase/Core'
  use_modular_headers!
#   use_frameworks!
#   use_frameworks! :linkage => :static

  # Firebase pods with modular headers to avoid non-modular header issues
#   pod 'Firebase/Auth', :modular_headers => true
#   pod 'Firebase/Firestore', :modular_headers => true

  # Use a specific Firestore version from Invertase repository if needed
  pod 'FirebaseFirestore', :git => 'https://github.com/invertase/firestore-ios-sdk-frameworks.git', :tag => '11.4.0'

  # Flutter iOS Pod helper
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

# Post-install configurations for modular header support
post_install do |installer|
  installer.pods_project.targets.each do |target|

    flutter_additional_ios_build_settings(target)

    # Set BUILD_LIBRARY_FOR_DISTRIBUTION to YES to avoid modular header issues
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
              '$(inherited)',
              'PERMISSION_CAMERA=1',
              'PERMISSION_MEDIA_LIBRARY=1',
              'PERMISSION_PHOTOS=1',
            ]
    end
  end
end
